package xyz.springabc.domin;
// Generated 2015-11-14 18:40:02 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.Max;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * Comment generated by hbm2java
 */
@Entity
@Table(name = "comment", catalog = "spring_winds")
public class Comment implements java.io.Serializable {
	private static final long serialVersionUID = 6000460945777289921L;
	
	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	private Integer id;
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "topic_id", nullable = false)
	private Topic topic;
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "user_id", nullable = false)
	private User user;
	
	@NotNull(message="内容不能为空")
	@Size(min=6,max=60000,message="内容六到六万个字符")
	@Column(name = "content", nullable = false)
	private String content;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_at", nullable = false, length = 19)
	private Date createAt;
	
	@Column(name = "floor", nullable = false)
	private long floor;
	
	@Column(name = "like_count", nullable = false)
	private long likeCount=0L;
	
	@Column(name = "status", nullable = false)
	private int status;
	
	@Transient
	private boolean isLike;
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "comment",cascade=CascadeType.REMOVE)
	private Set<Notification> notifications = new HashSet<Notification>(0);
	
	@ManyToMany(fetch = FetchType.EAGER, cascade = CascadeType.MERGE)
    @JoinTable(name = "comment_user",
        joinColumns = {@JoinColumn(name = "comment_id", nullable = false, updatable = false)},
        inverseJoinColumns = {@JoinColumn(name = "user_id", nullable = false, updatable = false)}
    )
	private Set<User> likeUsers =new HashSet<User>();

	public Comment() {
	}

	public Comment(Topic topic, User user, String content, Date createAt, long floor, long likeCount, int status,Set<User> likeUsers) {
		this.topic = topic;
		this.user = user;
		this.content = content;
		this.createAt = createAt;
		this.floor = floor;
		this.likeCount = likeCount;
		this.status = status;
		this.likeUsers = likeUsers;
	}

	public Comment(Topic topic, User user, String content, Date createAt, long floor, long likeCount, int status,boolean isLike,
			Set<Notification> notifications,Set<User> likeUsers) {
		this.topic = topic;
		this.user = user;
		this.content = content;
		this.createAt = createAt;
		this.floor = floor;
		this.likeCount = likeCount;
		this.status = status;
		this.isLike = isLike;
		this.notifications = notifications;
		this.likeUsers = likeUsers;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Topic getTopic() {
		return this.topic;
	}

	public void setTopic(Topic topic) {
		this.topic = topic;
	}

	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	public Date getCreateAt() {
		return this.createAt;
	}

	public void setCreateAt(Date createAt) {
		this.createAt = createAt;
	}

	public long getFloor() {
		return this.floor;
	}

	public void setFloor(long floor) {
		this.floor = floor;
	}

	public long getLikeCount() {
		return this.likeCount;
	}

	public void setLikeCount(long likeCount) {
		this.likeCount = likeCount;
	}

	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	public boolean getIsLike() {
		return isLike;
	}

	public void setLike(boolean isLike) {
		this.isLike = isLike;
	}

	public Set<Notification> getNotifications() {
		return this.notifications;
	}

	public void setNotifications(Set<Notification> notifications) {
		this.notifications = notifications;
	}

	public Set<User> getLikeUsers() {
		return likeUsers;
	}

	public void setLikeUsers(Set<User> likeUsers) {
		this.likeUsers = likeUsers;
	}
	
}
