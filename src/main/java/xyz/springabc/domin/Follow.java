package xyz.springabc.domin;
// Generated 2015-11-14 18:40:02 by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Follow generated by hbm2java
 */
@Entity
@Table(name = "follow", catalog = "spring_winds")
public class Follow implements java.io.Serializable {
	private static final long serialVersionUID = 5850698447971732395L;
	private int id;
	private User userByFollowerId;
	private User userByFollowingId;
	private Date createAt;

	public Follow() {
	}

	public Follow(int id, User userByFollowerId, User userByFollowingId, Date createAt) {
		this.id = id;
		this.userByFollowerId = userByFollowerId;
		this.userByFollowingId = userByFollowingId;
		this.createAt = createAt;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "follower_id", nullable = false)
	public User getUserByFollowerId() {
		return this.userByFollowerId;
	}

	public void setUserByFollowerId(User userByFollowerId) {
		this.userByFollowerId = userByFollowerId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "following_id", nullable = false)
	public User getUserByFollowingId() {
		return this.userByFollowingId;
	}

	public void setUserByFollowingId(User userByFollowingId) {
		this.userByFollowingId = userByFollowingId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createAt", nullable = false, length = 19)
	public Date getCreateAt() {
		return this.createAt;
	}

	public void setCreateAt(Date createAt) {
		this.createAt = createAt;
	}

}
